// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { __awaiter, __extends, __generator } from "tslib";
import { BaseRequestPolicy, HttpHeaders, isNode } from "@azure/core-http";
import { HeaderConstants } from "../utils/constants";
/**
 * TelemetryPolicy is a policy used to tag user-agent header for every requests.
 */
var TelemetryPolicy = /** @class */ (function (_super) {
    __extends(TelemetryPolicy, _super);
    /**
     * Creates an instance of TelemetryPolicy.
     * @param nextPolicy -
     * @param options -
     * @param telemetry -
     */
    function TelemetryPolicy(nextPolicy, options, telemetry) {
        var _this = _super.call(this, nextPolicy, options) || this;
        _this.telemetry = telemetry;
        return _this;
    }
    /**
     * Sends out request.
     *
     * @param request -
     */
    TelemetryPolicy.prototype.sendRequest = function (request) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (isNode) {
                    if (!request.headers) {
                        request.headers = new HttpHeaders();
                    }
                    if (!request.headers.get(HeaderConstants.USER_AGENT)) {
                        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);
                    }
                }
                return [2 /*return*/, this._nextPolicy.sendRequest(request)];
            });
        });
    };
    return TelemetryPolicy;
}(BaseRequestPolicy));
export { TelemetryPolicy };
//# sourceMappingURL=TelemetryPolicy.js.map
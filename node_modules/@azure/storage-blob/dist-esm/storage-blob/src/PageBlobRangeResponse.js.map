{"version":3,"file":"PageBlobRangeResponse.js","sourceRoot":"","sources":["../../../src/PageBlobRangeResponse.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AA8ElC;;;;;GAKG;AACH,MAAM,UAAU,sBAAsB,CACpC,QAAqF;IAErF,IAAM,SAAS,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC;QAC5E,MAAM,EAAE,CAAC,CAAC,KAAK;QACf,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK;KACvB,CAAC,EAH2E,CAG3E,CAAC,CAAC;IAEJ,IAAM,UAAU,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC;QAC9E,MAAM,EAAE,CAAC,CAAC,KAAK;QACf,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK;KACvB,CAAC,EAH6E,CAG7E,CAAC,CAAC;IAEJ,6BACK,QAAQ,KACX,SAAS,WAAA;QACT,UAAU,YAAA,EACV,SAAS,wBACJ,QAAQ,CAAC,SAAS,KACrB,UAAU,EAAE;gBACV,SAAS,WAAA;gBACT,UAAU,YAAA;aACX,OAEH;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse } from \"@azure/core-http\";\nimport {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponse as PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponse as PageBlobGetPageRangesDiffResponseModel\n} from \"./generatedModels\";\nimport { Range } from \"./Range\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse extends PageList, PageBlobGetPageRangesHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange\n      }\n    }\n  };\n}\n"]}
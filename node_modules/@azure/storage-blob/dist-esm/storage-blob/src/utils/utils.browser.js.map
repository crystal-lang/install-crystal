{"version":3,"file":"utils.browser.js","sourceRoot":"","sources":["../../../../src/utils/utils.browser.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AAElC;;;;GAIG;AACH,MAAM,UAAgB,iBAAiB,CAAC,IAAU;;;;YAC1C,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,sBAAO,IAAI,OAAO,CAAc,UAAC,OAAO,EAAE,MAAM;oBAC9C,UAAU,CAAC,SAAS,GAAG,UAAC,EAAO;wBAC7B,OAAO,CAAC,EAAE,CAAC,MAAO,CAAC,MAAM,CAAC,CAAC;oBAC7B,CAAC,CAAC;oBACF,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC;oBAC5B,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC,CAAC,EAAC;;;CACJ;AAED;;;;GAIG;AACH,MAAM,UAAgB,YAAY,CAAC,IAAU;;;;YACrC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,sBAAO,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;oBACzC,UAAU,CAAC,SAAS,GAAG,UAAC,EAAO;wBAC7B,OAAO,CAAC,EAAE,CAAC,MAAO,CAAC,MAAM,CAAC,CAAC;oBAC7B,CAAC,CAAC;oBACF,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC;oBAC5B,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,EAAC;;;CACJ;AAED,MAAM,UAAU,cAAc,KAAI,CAAC;AAEnC,MAAM,UAAU,eAAe,KAAI,CAAC;AAEpC,MAAM,UAAU,qBAAqB,KAAI,CAAC;AAE1C,MAAM,CAAC,IAAM,MAAM,GAAG,SAAS,IAAI,KAAI,CAAC,CAAC;AAEzC,MAAM,CAAC,IAAM,kBAAkB,GAAG,SAAS,gBAAgB,KAAI,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  const fileReader = new FileReader();\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob: Blob): Promise<string> {\n  const fileReader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsText(blob);\n  });\n}\n\nexport function streamToBuffer() {}\n\nexport function streamToBuffer2() {}\n\nexport function readStreamToLocalFile() {}\n\nexport const fsStat = function stat() {};\n\nexport const fsCreateReadStream = function createReadStream() {};\n"]}
{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"install-crystal # GitHub Action to install Crystal programming language and Shards package manager. Works on Ubuntu, macOS, Windows. Quickstart # Configurator : get a pre-made config for your exact use case! Examples # steps: - uses: oprypin/install-crystal@v1 - run: crystal eval \"puts 1337\" steps: - uses: actions/checkout@v2 - uses: oprypin/install-crystal@v1 with: crystal: 0.35.1 - run: shards install - run: crystal spec strategy: fail-fast: false matrix: include: - {os: ubuntu-latest, crystal: latest} - {os: ubuntu-latest, crystal: nightly} - {os: macos-latest} - {os: windows-latest} runs-on: ${{matrix.os}} steps: - uses: oprypin/install-crystal@v1 with: crystal: ${{matrix.crystal}} - uses: actions/checkout@v2 - run: shards install - run: crystal spec - run: crystal tool format --check if: matrix.crystal == 'latest' Find usages in the wild! Alternatively, you can use the container-based approach as in the starter workflow (without this action), but the advantage here is the unified approach to installation across 3 systems. Using a custom container has disadvantages on its own, too . Usage # Inputs # crystal: 0.35.1 (not supported on Windows) Install a particular release of Crystal. crystal: latest (default; not supported on Windows) Install the latest released version of Crystal. crystal: nightly (default on Windows) Install Crystal from the latest continuous build on crystal.git master. shards: true (default) Ensure that some released version of Shards is available. This uses the build that's bundled with Crystal's releases. Other options are slower, as building Shards is a necessary step then. shards: false Ensure that shards executable is not available. shards: latest Build and install the latest released version of Shards. shards: 0.13.0 Build and install a particular release of Shards. shards: nightly Build and install the latest commit of shards.git master. arch: x86_64 , arch: x86 (defaults to current OS arch) The architecture of the build of Crystal to download. destination: some/path The directory to store Crystal in, after extracting. Will directly affect outputs.path (the default is in a temporary location). token: ${{ github.token }} Personal access token (auto-populated). Outputs # crystal ( ${{ steps.some_step_id.outputs.crystal }} ) The actual version of Crystal (as a ref in crystal-lang/ crystal.git ) that was installed. shards ( ${{ steps.some_step_id.outputs.shards }} ) The actual version of Shards (as a ref in crystal-lang/ shards.git ) that was installed. path ( ${{ steps.some_step_id.outputs.path }} ) The path where Crystal was extracted to, so you can use '[path]/bin/crystal', '[path]/src' etc.","title":"Introduction"},{"location":"index.html#install-crystal","text":"GitHub Action to install Crystal programming language and Shards package manager. Works on Ubuntu, macOS, Windows.","title":"install-crystal"},{"location":"index.html#quickstart","text":"Configurator : get a pre-made config for your exact use case!","title":"Quickstart"},{"location":"index.html#examples","text":"steps: - uses: oprypin/install-crystal@v1 - run: crystal eval \"puts 1337\" steps: - uses: actions/checkout@v2 - uses: oprypin/install-crystal@v1 with: crystal: 0.35.1 - run: shards install - run: crystal spec strategy: fail-fast: false matrix: include: - {os: ubuntu-latest, crystal: latest} - {os: ubuntu-latest, crystal: nightly} - {os: macos-latest} - {os: windows-latest} runs-on: ${{matrix.os}} steps: - uses: oprypin/install-crystal@v1 with: crystal: ${{matrix.crystal}} - uses: actions/checkout@v2 - run: shards install - run: crystal spec - run: crystal tool format --check if: matrix.crystal == 'latest' Find usages in the wild! Alternatively, you can use the container-based approach as in the starter workflow (without this action), but the advantage here is the unified approach to installation across 3 systems. Using a custom container has disadvantages on its own, too .","title":"Examples"},{"location":"index.html#usage","text":"","title":"Usage"},{"location":"index.html#inputs","text":"crystal: 0.35.1 (not supported on Windows) Install a particular release of Crystal. crystal: latest (default; not supported on Windows) Install the latest released version of Crystal. crystal: nightly (default on Windows) Install Crystal from the latest continuous build on crystal.git master. shards: true (default) Ensure that some released version of Shards is available. This uses the build that's bundled with Crystal's releases. Other options are slower, as building Shards is a necessary step then. shards: false Ensure that shards executable is not available. shards: latest Build and install the latest released version of Shards. shards: 0.13.0 Build and install a particular release of Shards. shards: nightly Build and install the latest commit of shards.git master. arch: x86_64 , arch: x86 (defaults to current OS arch) The architecture of the build of Crystal to download. destination: some/path The directory to store Crystal in, after extracting. Will directly affect outputs.path (the default is in a temporary location). token: ${{ github.token }} Personal access token (auto-populated).","title":"Inputs"},{"location":"index.html#outputs","text":"crystal ( ${{ steps.some_step_id.outputs.crystal }} ) The actual version of Crystal (as a ref in crystal-lang/ crystal.git ) that was installed. shards ( ${{ steps.some_step_id.outputs.shards }} ) The actual version of Shards (as a ref in crystal-lang/ shards.git ) that was installed. path ( ${{ steps.some_step_id.outputs.path }} ) The path where Crystal was extracted to, so you can use '[path]/bin/crystal', '[path]/src' etc.","title":"Outputs"},{"location":"configurator.html","text":"I am developing an application a library (also track updates of deps) . I want to support Linux, macOS , Windows . I want to support latest Crystal, a particular older version and follow Crystal nightlies . I format code with crystal tool format . Cache dependencies (worth only if there are many) . Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: ~/.cache/shards key: ${{ runner.os }}-shards-${{ hashFiles('shard.yml') }} restore-keys: ${{ runner.os }}-shards- - name: Install shards run: shards update - name: Run tests run: crystal spec - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: crystal: [latest, nightly] runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: crystal: [0.35.1, latest] runs-on: ubuntu-latest steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly runs-on: ubuntu-latest env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [latest, nightly] runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: os: [ubuntu-latest, macos-latest] crystal: [0.35.1, latest] runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == 'latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal != 'nightly' && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Install shards run: shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. Add this content to your GitHub repository as .github/workflows/ci.yml : on: push: pull_request: branches: [master] schedule: - cron: '0 6 * * 6' # Every Saturday 6 AM jobs: build: strategy: fail-fast: false matrix: include: - os: ubuntu-latest - os: ubuntu-latest crystal: 0.35.1 - os: ubuntu-latest crystal: nightly - os: macos-latest - os: windows-latest runs-on: ${{ matrix.os }} env: SHARDS_OPTS: --ignore-crystal-version steps: - name: Download source uses: actions/checkout@v2 - name: Install Crystal uses: oprypin/install-crystal@v1 with: crystal: ${{ matrix.crystal }} - name: Cache shards uses: actions/cache@v2 with: path: lib key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }} - name: Install shards run: shards check || shards install - name: Run tests run: crystal spec - name: Build run: shards build - name: Check formatting run: crystal tool format --check if: matrix.crystal == null && matrix.os == 'ubuntu-latest' Make sure to check shard.lock in to source control. And shard.yml should be checked in, of course. I don't trust a third-party action . Copy the commit hash of the latest release instead of the \"v1\" part in oprypin/install-crystal@ v1 . var fixedRef = document.getElementById('fixed-ref'); function fixedRefChange() { var codes = document.querySelectorAll('.configurator .hljs-string'); var rev = fixedRef.checked ? 'f0b2ce0d9d45075b6da31d7130c26cfb51744ead' : 'v1'; for (var i = 0; i < codes.length; ++i) { if (codes[i].innerHTML.includes('install-crystal')) { codes[i].innerHTML = codes[i].innerHTML.replace(/@\\w+/g, '@' + rev); } } } if (fixedRef) { document.addEventListener('DOMContentLoaded', fixedRefChange); fixedRef.addEventListener('change', fixedRefChange); }","title":"Configurator"}]}